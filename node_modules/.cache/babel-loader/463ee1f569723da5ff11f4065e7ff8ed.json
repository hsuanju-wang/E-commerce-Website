{"ast":null,"code":"var _jsxFileName = \"/Users/phoebe0506/github-classroom/CMU-SSUI-Fall2022/hw6-hsuanjuw/src/containers/LogIn/LogIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport appRoutes from '../../shared/appRoutes';\nimport { getAuth, signInWithPopup, signOut, GoogleAuthProvider, onAuthStateChanged } from \"firebase/auth\";\nimport GoogleImg from '../../assets/images/google-logo.png';\nimport app from '../../index';\nimport './LogIn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = auth => {\n  _s();\n  const [isLogIn, setIsLogInValue] = useState(false);\n  useEffect(() => {\n    async function checkUser() {\n      onAuthStateChanged(auth, user => {\n        if (user) {\n          setIsLogInValue(true);\n        } else {\n          setIsLogInValue(false);\n        }\n      });\n    }\n    checkUser();\n  }, []);\n  const provider = new GoogleAuthProvider();\n  const logIn = () => {\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.customData.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n    });\n  };\n\n  const logOut = () => {\n    signOut(auth).then(() => {\n      // Sign-out successful.\n    }).catch(error => {\n      // An error happened.\n    });\n  };\n  function LogInButton(props) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logInBtn\",\n      id: \"logInBtn\",\n      onClick: () => logIn(),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: GoogleImg,\n        id: \"google-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Log In with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n  function LogOutButton(props) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logInBtn\",\n      id: \"logOutBtn\",\n      onClick: () => logOut(),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: GoogleImg,\n        id: \"google-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Log In with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logInContainer\",\n    children: this.state.isLogIn ? /*#__PURE__*/_jsxDEV(LogoutButton, {\n      onClick: this.handleLogoutClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(LoginButton, {\n      onClick: this.handleLoginClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(NavBar, \"GNLlK25wVEgdrlrmJjObznMJcqE=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","appRoutes","getAuth","signInWithPopup","signOut","GoogleAuthProvider","onAuthStateChanged","GoogleImg","app","NavBar","auth","isLogIn","setIsLogInValue","useEffect","checkUser","user","provider","logIn","then","result","credential","credentialFromResult","token","accessToken","catch","error","errorCode","code","errorMessage","message","email","customData","credentialFromError","logOut","LogInButton","props","LogOutButton","state","handleLogoutClick","handleLoginClick"],"sources":["/Users/phoebe0506/github-classroom/CMU-SSUI-Fall2022/hw6-hsuanjuw/src/containers/LogIn/LogIn.js"],"sourcesContent":["import React, { useState } from 'react';\nimport appRoutes from '../../shared/appRoutes';\nimport { getAuth, signInWithPopup,signOut, GoogleAuthProvider, onAuthStateChanged } from \"firebase/auth\";\n\nimport GoogleImg from '../../assets/images/google-logo.png';\nimport app from '../../index';\nimport './LogIn.css';\n\nconst NavBar = (auth) =>  {\n    const [isLogIn, setIsLogInValue] = useState(false);\n    useEffect(() => {\n        async function checkUser() {\n            onAuthStateChanged(auth, (user) => {\n                if (user) {\n                    setIsLogInValue(true);\n                } else {\n                    setIsLogInValue(false);\n                }\n              })\n        }\n    \n        checkUser();\n    \n      }, []);\n    const provider = new GoogleAuthProvider();\n\n    const logIn = () => {\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                // The signed-in user info.\n                const user = result.user;\n                // ...\n            }).catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.customData.email;\n                // The AuthCredential type that was used.\n                const credential = GoogleAuthProvider.credentialFromError(error);\n                // ...\n            });\n    }\n\n    const logOut= () => {\n        signOut(auth).then(() => {\n            // Sign-out successful.\n          }).catch((error) => {\n            // An error happened.\n          });\n    }\n\n    function LogInButton(props) {\n        return (\n            <button className='logInBtn' id='logInBtn' onClick={() => logIn()}>\n                <img src={GoogleImg} id=\"google-logo\"/>\n                <p>Log In with Google</p>\n            </button>\n        );\n    }\n\n    function LogOutButton(props) {\n        return (\n            <button className='logInBtn' id='logOutBtn' onClick={() => logOut()}>\n                <img src={GoogleImg} id=\"google-logo\"/>\n                <p>Log In with Google</p>\n            </button>  \n        );\n    }\n\n    return (\n        <div className='logInContainer'>\n            {this.state.isLogIn\n                ? <LogoutButton onClick={this.handleLogoutClick} />\n                : <LoginButton onClick={this.handleLoginClick} />\n            }\n        </div>     \n    )\n}\nexport default NavBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}